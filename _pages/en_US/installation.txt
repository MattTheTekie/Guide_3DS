---
title: "Installing RPCSX"
---

{% include toc title="Table of Contents" %}
{: .notice--info}

### Compatibility Notes

For the foreseeable future, installation will require Linux in some form.

### Method 1: Linux

#### Section I - Install dependencies.
### Ubuntu based systems:
`sudo apt install build-essential cmake libunwind-dev libglfw3-dev libvulkan-dev vulkan-validationlayers-dev spirv-tools glslang-tools libspirv-cross-c-shared-dev`
### Fedora based systems:
`sudo dnf install cmake libunwind-devel glfw-devel vulkan-devel vulkan-validation-layers-devel spirv-tools glslang-devel gcc-c++ gcc spirv-tools-devel xbyak-devel`
### Arch based systems:
`sudo pacman -S libunwind glfw-x11 vulkan-devel glslang`

#### Section II - Continued Installation:
Clone the repo.
`git clone --recursive https://github.com/RPCSX/rpcsx && cd rpcsx
git submodule update --init --recursive`
Compile the emulator.
`mkdir -p build && cd build && cmake .. && cmake --build .`
Create a virtual HDD. Note that the PS4 filesystem is case-insensitive.
`truncate -s 512M ps4-hdd.exfat
mkfs.exfat -n PS4-HDD ./ps4-hdd.exfat
mkdir ps4-fs
sudo mount -t exfat -o uid=`id -u`,gid=`id -g` ./ps4-hdd.exfat ./ps4-fs`

#### Section II - Installing boot9strap

In this section, you will install custom firmware to the dumped NAND image, and then install this NAND image back onto the console to install custom firmware on it.

1. Run hardmod-b9s-installer
    + Windows Users: Run `install-b9s.exe`
    + Mac and Linux Users: Run `install-b9s.py`
1. Flash your outputted `NAND-patched.bin` to your console with your hardmod
1. Power off your console
1. Disconnect your hardmod
1. Press and hold (Select), and while holding (Select), power on your console
{% include_relative include/configure-luma3ds.txt %}

{% include_relative include/luma3ds-installed-note.txt %}

___

### Continue to [Finalizing Setup](finalizing-setup)
{: .notice--primary}
